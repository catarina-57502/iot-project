[
  {
    "id": "0f1a10f3a0fd845b",
    "type": "tab",
    "label": "Part02",
    "disabled": false,
    "info": "",
    "env": []
  },
  {
    "id": "02ea5c0653bbc071",
    "type": "mqtt in",
    "z": "0f1a10f3a0fd845b",
    "name": "",
    "topic": "idc/bat01",
    "qos": "2",
    "datatype": "json",
    "broker": "c849af731edcf13d",
    "nl": false,
    "rap": true,
    "rh": 0,
    "inputs": 0,
    "x": 220,
    "y": 320,
    "wires": [
      [
        "8ac835c28f3f24d2"
      ]
    ]
  },
  {
    "id": "ceb04049d424d5cb",
    "type": "mqtt in",
    "z": "0f1a10f3a0fd845b",
    "name": "",
    "topic": "idc/bat02",
    "qos": "2",
    "datatype": "json",
    "broker": "c849af731edcf13d",
    "nl": false,
    "rap": true,
    "rh": 0,
    "inputs": 0,
    "x": 220,
    "y": 500,
    "wires": [
      [
        "e371fd3d463cb970"
      ]
    ]
  },
  {
    "id": "7655896250ad25f8",
    "type": "exec",
    "z": "0f1a10f3a0fd845b",
    "command": "python3 ia.py ",
    "addpay": "payload",
    "append": "",
    "useSpawn": "false",
    "timer": "",
    "winHide": false,
    "oldrc": false,
    "name": "Prediction Model",
    "x": 770,
    "y": 320,
    "wires": [
      [
        "fb3d95f81f333032"
      ],
      [],
      []
    ]
  },
  {
    "id": "8ac835c28f3f24d2",
    "type": "python3-function",
    "z": "0f1a10f3a0fd845b",
    "name": "",
    "func": "def scale(x, min ,max):\n    return (x - min) / max\n\nbattery_ID = msg[\"payload\"][\"battery_ID\"]\n\nt = 0.5\nvoltage_battery = scale(float(msg[\"payload\"][\"voltage_battery\"]),1.786878293427543,2.4281911468086217)\ncurrent_battery = scale(float(msg[\"payload\"][\"current_battery\"]),-4.030268477538787,5.561569904513321)\ntemp_battery = scale(float(msg[\"payload\"][\"temp_battery\"]),22.969922978716898,19.36259938851624)\ncurrent_load = scale(float(msg[\"payload\"][\"current_load\"]),-4.036,6.036)\nvoltage_load = scale(float(msg[\"payload\"][\"voltage_load\"]),0.0,4.958)\n\n\n\nmsg[\"payload\"] = \"\\\"\" + str(t) + \" \"  + str(voltage_battery) + \" \"  + str(current_battery) + \" \"  + str(temp_battery) + \" \"  + str(current_load) + \" \"  + str(voltage_load) +  \"\\\"\"\nreturn msg",
    "outputs": 1,
    "x": 490,
    "y": 320,
    "wires": [
      [
        "7655896250ad25f8"
      ]
    ]
  },
  {
    "id": "fb3d95f81f333032",
    "type": "python3-function",
    "z": "0f1a10f3a0fd845b",
    "name": "",
    "func": "def unscale(x, minv, maxv):\n    return (x * maxv) + minv\n\ngr = msg[\"payload\"]\nalo = gr.replace(\"[\",\"\")\nalo = alo.replace(\"]\",\"\")\n\nresult = float(alo)\n\nresult = unscale(result,0.0,10807.328)\n\nmsg[\"payload\"] = result\n\nreturn msg",
    "outputs": 1,
    "x": 1030,
    "y": 320,
    "wires": [
      [
        "b8a94c1650d3018f"
      ]
    ]
  },
  {
    "id": "b8a94c1650d3018f",
    "type": "debug",
    "z": "0f1a10f3a0fd845b",
    "name": "",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "payload",
    "targetType": "msg",
    "statusVal": "",
    "statusType": "auto",
    "x": 1110,
    "y": 240,
    "wires": []
  },
  {
    "id": "11da2397cb6c5ea1",
    "type": "exec",
    "z": "0f1a10f3a0fd845b",
    "command": "python3 ia.py ",
    "addpay": "payload",
    "append": "",
    "useSpawn": "false",
    "timer": "",
    "winHide": false,
    "oldrc": false,
    "name": "Prediction Model",
    "x": 750,
    "y": 500,
    "wires": [
      [
        "87c4df314d970a05"
      ],
      [],
      []
    ]
  },
  {
    "id": "e371fd3d463cb970",
    "type": "python3-function",
    "z": "0f1a10f3a0fd845b",
    "name": "",
    "func": "def scale(x, min ,max):\n    return (x - min) / max\n\nbattery_ID = msg[\"payload\"][\"battery_ID\"]\n\nt = 0.5\nvoltage_battery = scale(float(msg[\"payload\"][\"voltage_battery\"]),1.786878293427543,2.4281911468086217)\ncurrent_battery = scale(float(msg[\"payload\"][\"current_battery\"]),-4.030268477538787,5.561569904513321)\ntemp_battery = scale(float(msg[\"payload\"][\"temp_battery\"]),22.969922978716898,19.36259938851624)\ncurrent_load = scale(float(msg[\"payload\"][\"current_load\"]),-4.036,6.036)\nvoltage_load = scale(float(msg[\"payload\"][\"voltage_load\"]),0.0,4.958)\n\n\n\nmsg[\"payload\"] = \"\\\"\" + str(t) + \" \"  + str(voltage_battery) + \" \"  + str(current_battery) + \" \"  + str(temp_battery) + \" \"  + str(current_load) + \" \"  + str(voltage_load) +  \"\\\"\"\nreturn msg",
    "outputs": 1,
    "x": 470,
    "y": 500,
    "wires": [
      [
        "11da2397cb6c5ea1"
      ]
    ]
  },
  {
    "id": "87c4df314d970a05",
    "type": "python3-function",
    "z": "0f1a10f3a0fd845b",
    "name": "",
    "func": "def unscale(x, minv, maxv):\n    return (x * maxv) + minv\n\ngr = msg[\"payload\"]\nalo = gr.replace(\"[\",\"\")\nalo = alo.replace(\"]\",\"\")\n\nresult = float(alo)\n\nresult = unscale(result,0.0,10807.328)\n\nmsg[\"payload\"] = result\n\nreturn msg",
    "outputs": 1,
    "x": 1010,
    "y": 500,
    "wires": [
      [
        "f96dbfabb6706fcb"
      ]
    ]
  },
  {
    "id": "f96dbfabb6706fcb",
    "type": "debug",
    "z": "0f1a10f3a0fd845b",
    "name": "",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "payload",
    "targetType": "msg",
    "statusVal": "",
    "statusType": "auto",
    "x": 1090,
    "y": 420,
    "wires": []
  },
  {
    "id": "c849af731edcf13d",
    "type": "mqtt-broker",
    "name": "idc",
    "broker": "35.203.53.109",
    "port": "1883",
    "clientid": "idc",
    "autoConnect": true,
    "usetls": false,
    "protocolVersion": "3",
    "keepalive": "500",
    "cleansession": true,
    "birthTopic": "",
    "birthQos": "0",
    "birthPayload": "",
    "birthMsg": {},
    "closeTopic": "",
    "closeQos": "0",
    "closePayload": "",
    "closeMsg": {},
    "willTopic": "",
    "willQos": "0",
    "willPayload": "",
    "willMsg": {},
    "sessionExpiry": ""
  }
]